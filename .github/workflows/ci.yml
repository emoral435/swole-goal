# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: go-built-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ./backend

    # Service containers to run with `container-job`
    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres:16.2-alpine3.19
          # Provide the password for postgres
          env:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: swole_goal
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            # Maps tcp port 5432 on service container to the host
            - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/
        which migrate

    - name: run migrations
      run: make migrateup

    - name: Build
      run: go build -v ./...

    - name: Test
      run: make test